package parser

type Document struct {
	*CustomType
	ID         string
	Definitions []Types
	Filename string
	Package     string
	Globals map[string]Types

}

func NewDocument(ctx *SchemaContext, id string, anonymousStruct Types, definitions []Types, filename string) *Document {
	s := PrefixType(anonymousStruct)
	return &Document{
		s,
		id,
		definitions,
		filename,
		ctx.Package,
		ctx.Globals,
	}

}

const DocumentTemplate = `
// Code generated by jsonschema. DO NOT EDIT.

{{- if .Package}}
package {{.Package}}
{{else}}
package main
{{- end}}

{{ if .ID -}}
// ID: {{.ID}}
{{ end }}

{{ if .CustomType -}}
	{{template "customtype" .CustomType }}
{{end -}}
{{range $key, $definition := .Definitions -}}
	{{template "customtype" $definition  }}
{{end -}}

{{range $key, $global := .Globals -}}
	{{- template "kind" $global -}}
{{end}}
`